openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumen API Cloud Function Aplikasi E-Dumas Sukasari
  termsOfService: https://github.com/e-dumas-sukasari/swagger
  contact:
    email: miqbalr18@gmail.com
  license:
    name: edumasbackend Package
    url: https://pkg.go.dev/github.com/e-dumas-sukasari/edumasbackend
  version: 0.1.3
externalDocs:
  description: Website
  url: https://e-dumas-sukasari.my.id/
servers:
  - url: https://us-central1-gisiqbal.cloudfunctions.net/
tags:
paths:
  /User-RegisterNew:
    post:
      tags:
        - Register
      summary: Register User 
      description: Data User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /User-Loginnew:
    post:
      tags:
        - Auth
      summary: Login User
      description: Data User
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponse"
        "405":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /Admin-Login:
    post:
      tags:
        - Auth
      summary: Login Admin
      description: Data Admin
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Admin"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponseAdmin"
        "405":
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey

  /Insert-Report:
    post:
      tags:
        - Report
      summary: Create Report Data
      description: Add new Report data
      operationId: create Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReport' # Gunakan skema yang sesuai di sini
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CreateReport'
        '400':
          description: Invalid input or request body
      security:
        - Login: []

  /Update-Report:
    put:
      tags:
        - Report
      summary: Updated Report Data berdasarkan nomor nik
      description: Updated Report data
      operationId: Updated Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Report' # Gunakan skema yang sesuai di sini
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CreateReport'
        '400':
          description: Invalid input or request body
      security:
        - Login: []

  /Delete-Report:
    delete:
      tags:
        - Report
      summary: delete Report Data berdasarkan nomor nik
      description: delete Report data
      operationId: delete Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteReport' # Gunakan skema yang sesuai di sini
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CreateReport'
        '400':
          description: Invalid input or request body
      security:
        - Login: []      

  /Insert-Tanggapan:
    post:
      tags:
        - Report
      summary: Create Report Data
      description: Add new Report data
      operationId: create Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReport' # Gunakan skema yang sesuai di sini
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CreateReport'
        '400':
          description: Invalid input or request body
      security:
        - Login: []

  /GetAll-Reports:
    get:
      tags:
        - Report
      summary: Get All Report Data
      description: Get all data of Report
      operationId: getAllDataReport
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateReport'
        '405':
          description: Invalid input
      security:
        - login:
          - write:apiKey
          - read:apiKey
  /GetOneReport:
    get:
      tags:
        - Report
      summary: Get One Report Data
      description: Get one data of Report by ID
      operationId: getOneDataReport
      parameters:
        - name: Id
          in: path
          required: true
          description: ID of the Report
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '404':
          description: Report not found
      security:
        - login:
          - write:apiKey
          - read:apiKey

components:
  schemas:
    user:
      type: object
      properties:
        username:
          type: string
          example : edumasser
        password:
          type: string
          example: edumasser
        notelp:
          type: string
          example: string
        role:
          type: string
          example: user

    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data

    admin:
      type: object
      properties:
        username:
          type: string
          example : edumasmin
        password:
          type: string
          example: edumasmin
        role:
          type: string
          example: admin

    AuthResponseAdmin:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data

   CreateReport:
      type: object
      properties:
        Nik:
          type: int
          example: 3273057110006
        Nama:
          type: string
          example: iqbal
        Title:
          type: string
          example: Kecelakaan motor
        Description:
          type: string
          example: Terjadi kecelakaan sepeda motor di jalan sariasih
        DateOccurred:
          type: string
          example: 12-01-2024          
        Image:
          type: string
          example: gambar
        Status:
          type: bool
          example: true

    DeleteReport:
      type: object
      properties:
        nik:
          type: int
          example: 1232123


  AuthReq:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    
  AuthReqAdmin:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Admin"

    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponse"

    AdminArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/AuthResponseAdmin"

  securitySchemes:
    Login:
      type: apiKey
      name: Login
      in: header